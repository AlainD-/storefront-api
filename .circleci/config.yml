version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.6
  eb-cli: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - run:
          name: Install Dependencies
          command: npm i
      - run:
          name: Build
          command: npm run build
  test:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - run:
          name: Install Dependencies
          command: npm i
      - run:
          name: Unit Tests
          command: npm run test
  lint:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - run:
          name: Install Dependencies
          command: npm i
      - run:
          name: Linting
          command: npm run lint
  prepare_deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - run:
          name: Preparing artifacts
          command: npm run deploy:all
      - persist_to_workspace:
          root: ./deploy
          paths:
            - ./*
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup
      - eb-cli/setup
      - run:
          name: Deploying
          command: |
            eb init --platform 'Node.js 14 running on 64bit Amazon Linux 2' --region 'us-east-1' 'storefront-api'
            eb setenv BCRYPT_PASSWORD=$BCRYPT_PASSWORD JWT_TOKEN_SECRET=$JWT_TOKEN_SECRET PORT=$PORT POSTGRES_DB=$POSTGRES_DB POSTGRES_DB_TEST=$POSTGRES_DB_TEST POSTGRES_HOST=$POSTGRES_HOST POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_PASSWORD_TEST=$POSTGRES_PASSWORD_TEST POSTGRES_PORT=$POSTGRES_PORT POSTGRES_USER=$POSTGRES_USER SALT_ROUNDS=$SALT_ROUNDS
            eb deploy
# Orchestrate our job run sequence
workflows:
  build_test_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test
      - lint
      - prepare_deploy:
          filters:
            branches:
              only: master
          requires:
            - build
            - test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - prepare_deploy
